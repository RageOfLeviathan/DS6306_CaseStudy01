knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
dir = 'C:/Users/chief/Documents/SMU/Coursework/DS6306_DoingDataScience/DataSets'
fname1 = 'Beers.csv'
fname2 = 'Breweries.csv'
fpath1 = paste(dir,fname1,sep='/')
fpath2 = paste(dir,fname2,sep='/')
beers = read.csv(fpath1)
breweries = read.csv(fpath2)
full_data = merge(beers,breweries,by.y="Brew_ID",by.x="Brewery_id") %>%
mutate(fips = fips(trimws(State)))
library(usmap)
full_data = merge(beers,breweries,by.y="Brew_ID",by.x="Brewery_id") %>%
mutate(fips = fips(trimws(State)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
dir = 'C:/Users/chief/Documents/SMU/Coursework/DS6306_DoingDataScience/DataSets'
fname1 = 'Beers.csv'
fname2 = 'Breweries.csv'
fpath1 = paste(dir,fname1,sep='/')
fpath2 = paste(dir,fname2,sep='/')
beers = read.csv(fpath1)
breweries = read.csv(fpath2)
library(usmap)
full_data = merge(beers,breweries,by.y="Brew_ID",by.x="Brewery_id") %>%
mutate(fips = fips(trimws(State)))
head(full_data)
tail(full_data)
full_data[sample(1:nrow(full_data),10),]
st_data = breweries %>% count(State) %>% mutate(fips = fips(trimws(State)))
plot_usmap(data = st_data,values="n") + theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="brown",
name = "Brewery Count",label = scales::comma,
limits = c(0,50))
st_data %>% slice_max(n,n=5) %>% summarise(State,n)
st_data %>% slice_min(n,n=5) %>% summarise(State,n)
nst = nrow(st_data)
nbrew = sum(st_data$n)
st_data %>% arrange(desc(n)) %>% transmute(percent = n / nbrew) %>% cumsum() %>% ggplot(aes(x=1:nst,y=percent)) + geom_line() + xlab('Top N States') + ylab('Percent Data')
abv = full_data %>% select(State,fips,ABV) %>% group_by(State) %>%
summarise(avg_abv = mean(ABV,na.rm = TRUE),med_abv = median(ABV,na.rm=TRUE), n_valid = sum(!is.na(ABV)),fips = unique(fips))
plot_usmap(data = abv,values="n_valid")+ theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="darkgreen",
name = "Data Points",label = scales::comma,
limits = c(0,300))
abv = full_data %>% select(State,fips,ABV) %>% group_by(State) %>%
summarise(avg_abv = mean(ABV,na.rm = TRUE),med_abv = median(ABV,na.rm=TRUE), n_valid = sum(!is.na(ABV)),fips = unique(fips))
plot_usmap(data = abv,values="med_abv") + theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="darkblue",
name = "Median ABV (%)",label = scales::comma,
limits = c(0.03,0.07))
abv %>% arrange(med_abv) %>% mutate(State = factor(State,State)) %>% ggplot(aes(y=State,x=med_abv)) + geom_bar(stat='identity')
summary(full_data$ABV)
hist(full_data$ABV)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
dir = 'C:/Users/chief/Documents/SMU/Coursework/DS6306_DoingDataScience/DataSets'
fname1 = 'Beers.csv'
fname2 = 'Breweries.csv'
fpath1 = paste(dir,fname1,sep='/')
fpath2 = paste(dir,fname2,sep='/')
beers = read.csv(fpath1)
breweries = read.csv(fpath2)
library(usmap)
full_data = merge(beers,breweries,by.y="Brew_ID",by.x="Brewery_id") %>%
mutate(fips = fips(trimws(State)))
head(full_data)
tail(full_data)
full_data[sample(1:nrow(full_data),10),]
st_data = breweries %>% count(State) %>% mutate(fips = fips(trimws(State)))
plot_usmap(data = st_data,values="n") + theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="brown",
name = "Brewery Count",label = scales::comma,
limits = c(0,50))
st_data %>% slice_max(n,n=5) %>% summarise(State,n)
st_data %>% slice_min(n,n=5) %>% summarise(State,n)
nst = nrow(st_data)
nbrew = sum(st_data$n)
st_data %>% arrange(desc(n)) %>% transmute(percent = n / nbrew) %>% cumsum() %>% ggplot(aes(x=1:nst,y=percent)) + geom_line() + xlab('Top N States') + ylab('Percent Data')
abv = full_data %>% select(State,fips,ABV) %>% group_by(State) %>%
summarise(avg_abv = mean(ABV,na.rm = TRUE),med_abv = median(ABV,na.rm=TRUE), n_valid = sum(!is.na(ABV)),fips = unique(fips))
plot_usmap(data = abv,values="n_valid")+ theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="darkgreen",
name = "Data Points",label = scales::comma,
limits = c(0,300))
abv = full_data %>% select(State,fips,ABV) %>% group_by(State) %>%
summarise(avg_abv = mean(ABV,na.rm = TRUE),med_abv = median(ABV,na.rm=TRUE), n_valid = sum(!is.na(ABV)),fips = unique(fips))
plot_usmap(data = abv,values="med_abv") + theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="darkblue",
name = "Median ABV (%)",label = scales::comma,
limits = c(0.03,0.07))
abv %>% arrange(med_abv) %>% mutate(State = factor(State,State)) %>% ggplot(aes(y=State,x=med_abv)) + geom_bar(stat='identity')
summary(full_data$ABV)
hist(full_data$ABV)
ibu = full_data %>% select(State,fips,IBU) %>% group_by(State) %>%
summarise(avg_ibu = mean(IBU,na.rm = TRUE),med_ibu = median(IBU,na.rm=TRUE), n_valid = sum(!is.na(IBU)),fips = unique(fips))
plot_usmap(data = ibu,values="n_valid") + theme(legend.position = 'right') + scale_fill_continuous(low = "white", high ="darkorange", name = "Data Points",label = scales::comma,limits = c(15,150))
plot_usmap(data = ibu,values="med_ibu") + theme(legend.position = "right") + scale_fill_continuous(low = "darkblue", high ="darkorange",
name = "Median IBU",label = scales::comma,
limits = c(0,65))
ibu %>% arrange(med_ibu) %>% mutate(State = factor(State,State)) %>% ggplot(aes(y=State,x=med_ibu)) + geom_bar(stat='identity')
full_data$State[which.max(full_data$ABV)]
full_data$State[which.max(full_data$IBU)]
full_data %>% select(ABV,IBU) %>% ggplot(aes(x=ABV,y=IBU)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
dir = 'C:/Users/chief/Documents/SMU/Coursework/DS6306_DoingDataScience/DataSets'
fname1 = 'Beers.csv'
fname2 = 'Breweries.csv'
fpath1 = paste(dir,fname1,sep='/')
fpath2 = paste(dir,fname2,sep='/')
beers = read.csv(fpath1)
breweries = read.csv(fpath2)
library(usmap)
full_data = merge(beers,breweries,by.y="Brew_ID",by.x="Brewery_id") %>%
mutate(fips = fips(trimws(State)))
head(full_data)
tail(full_data)
full_data[sample(1:nrow(full_data),10),]
st_data = breweries %>% count(State) %>% mutate(fips = fips(trimws(State)))
plot_usmap(data = st_data,values="n") + theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="brown",
name = "Brewery Count",label = scales::comma,
limits = c(0,50))
st_data %>% slice_max(n,n=5) %>% summarise(State,n)
st_data %>% slice_min(n,n=5) %>% summarise(State,n)
nst = nrow(st_data)
nbrew = sum(st_data$n)
st_data %>% arrange(desc(n)) %>% transmute(percent = n / nbrew) %>% cumsum() %>% ggplot(aes(x=1:nst,y=percent)) + geom_line() + xlab('Top N States') + ylab('Percent Data')
abv = full_data %>% select(State,fips,ABV) %>% group_by(State) %>%
summarise(avg_abv = mean(ABV,na.rm = TRUE),med_abv = median(ABV,na.rm=TRUE), n_valid = sum(!is.na(ABV)),fips = unique(fips))
plot_usmap(data = abv,values="n_valid")+ theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="darkgreen",
name = "Data Points",label = scales::comma,
limits = c(0,300))
abv = full_data %>% select(State,fips,ABV) %>% group_by(State) %>%
summarise(avg_abv = mean(ABV,na.rm = TRUE),med_abv = median(ABV,na.rm=TRUE), n_valid = sum(!is.na(ABV)),fips = unique(fips))
plot_usmap(data = abv,values="med_abv") + theme(legend.position = "right") + scale_fill_continuous(low = "white", high ="darkblue",
name = "Median ABV (%)",label = scales::comma,
limits = c(0.03,0.07))
abv %>% arrange(med_abv) %>% mutate(State = factor(State,State)) %>% ggplot(aes(y=State,x=med_abv)) + geom_bar(stat='identity')
summary(full_data$ABV)
hist(full_data$ABV)
ibu = full_data %>% select(State,fips,IBU) %>% group_by(State) %>%
summarise(avg_ibu = mean(IBU,na.rm = TRUE),med_ibu = median(IBU,na.rm=TRUE), n_valid = sum(!is.na(IBU)),fips = unique(fips))
plot_usmap(data = ibu,values="n_valid") + theme(legend.position = 'right') + scale_fill_continuous(low = "white", high ="darkorange", name = "Data Points",label = scales::comma,limits = c(15,150))
plot_usmap(data = ibu,values="med_ibu") + theme(legend.position = "right") + scale_fill_continuous(low = "darkblue", high ="darkorange",
name = "Median IBU",label = scales::comma,
limits = c(0,65))
ibu %>% arrange(med_ibu) %>% mutate(State = factor(State,State)) %>% ggplot(aes(y=State,x=med_ibu)) + geom_bar(stat='identity')
full_data$State[which.max(full_data$ABV)]
full_data$State[which.max(full_data$IBU)]
full_data %>% select(ABV,IBU) %>% ggplot(aes(x=ABV,y=IBU)) + geom_point()
library(class)
library(tidyverse)
library(caret)
sub_data = full_data %>% mutate(IPA = grepl('IPA',full_data$Style),Ale  =grepl('Ale',full_data$Style)) %>% filter(IPA | Ale) %>% select(IPA,ABV,IBU)
sub_data = sub_data %>% mutate(Zabv = scale(ABV),Zibu = scale(IBU))
sub_data %>% ggplot(aes(x=Zabv,y=Zibu,color=IPA)) + geom_point(position = 'jitter')
set.seed(39821638)
train = sub_data %>% filter(!is.na(ABV)) %>% filter(!is.na(IBU))
train$ale = 'Non-IPA'
train$ale[train$IPA] = 'IPA'
train = train %>% select(Zabv,Zibu,ale,ABV,IBU)
train$ale = as.factor(train$ale)
n_points = nrow(train)
max_k = ceiling(.1 * n_points);
acc = data.frame()
for (kv in 1:max_k){
pred.ipa = knn.cv(train[,1:2],train$ale,k=kv)
Cmat = confusionMatrix(pred.ipa,train$ale,positive = 'IPA')
acc[kv,1] = kv
acc[kv,2] = Cmat$overall[1]
}
colnames(acc) = c('K','Accuracy')
acc %>% ggplot(aes(x=K,y=Accuracy)) + geom_line()
sel_k = acc[which.max(acc[,2]),1]
sel_k
library(pracma)
min_x = min(train[,1])
max_x = max(train[,1])
min_y = min(train[,2])
max_y = max(train[,2])
Xvals = linspace(min_x,max_x,n=500)
Yvals = linspace(min_y,max_y,n=500)
grids = meshgrid(Xvals,Yvals)
mean_ibu = mean(train$IBU)
sd_ibu = sd(train$IBU)
mean_abv = mean(train$ABV)
sd_abv = sd(train$ABV)
test=data.frame(Zabv = c(grids$X),Zibu = c(grids$Y))
test = test %>% mutate(ABV = mean_abv + Zabv*sd_abv,IBU = mean_ibu + Zibu*sd_ibu)
pred.test = knn(train[,1:2],test[,1:2],train$ale,k=sel_k,prob = TRUE)
prob_ipa = attr(pred.test,'prob')
prob_ipa[pred.test != 'IPA'] = 1 - prob_ipa[pred.test != 'IPA']
test %>% ggplot(aes(x=ABV,y=IBU,fill=prob_ipa)) + geom_tile() + theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pop = full_data %>% select(State,Style) %>% group_by(State) %>%
count(Style) %>% slice_max(n,n=1) %>% mutate(fips = fips(trimws(State)))
pop$Style[pop$n <= 2] = 'Other'
plot_usmap(data = pop,values="Style") + theme(legend.position = "right")
pop = full_data %>% select(State,Style) %>% group_by(State) %>%
count(Style) %>% slice_max(n,n=1) %>% mutate(fips = fips(trimws(State)))
pop$Style[pop$n <= 2] = 'Other'
plot_usmap(data = pop,values="Style") + theme(legend.position = "right")
